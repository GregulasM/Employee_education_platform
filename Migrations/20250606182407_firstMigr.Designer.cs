// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using eep_backend;

#nullable disable

namespace eep_backend.Migrations
{
    [DbContext(typeof(SiteDbContext))]
    [Migration("20250606182407_firstMigr")]
    partial class firstMigr
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("eep_backend.Models.CourseModuleModels.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("jsonb");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("HiddenAchievementId")
                        .HasColumnType("integer");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("integer");

                    b.Property<Guid>("PublicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double?>("Rating")
                        .HasColumnType("double precision");

                    b.Property<string>("Tags")
                        .HasColumnType("jsonb");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("HiddenAchievementId");

                    b.HasIndex("ModuleId");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("eep_backend.Models.CourseModuleModels.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<double?>("Position")
                        .HasColumnType("double precision");

                    b.Property<Guid>("PublicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Tags")
                        .HasColumnType("jsonb");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("UserId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("eep_backend.Models.CourseModuleModels.Link", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CourseId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int?>("ParentId")
                        .HasColumnType("integer");

                    b.Property<Guid>("PublicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Tags")
                        .HasColumnType("jsonb");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("ParentId");

                    b.ToTable("Links");
                });

            modelBuilder.Entity("eep_backend.Models.CourseModuleModels.Module", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CourseId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int?>("HiddenAchievementId")
                        .HasColumnType("integer");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<double?>("Order")
                        .HasColumnType("double precision");

                    b.Property<Guid>("PublicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Tags")
                        .HasColumnType("jsonb");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("HiddenAchievementId");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("eep_backend.Models.CourseModuleModels.Test", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Attempts")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("AvailableFrom")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("AvailableTo")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CourseId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<double?>("MaxScore")
                        .HasColumnType("double precision");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("integer");

                    b.Property<double?>("PassingScore")
                        .HasColumnType("double precision");

                    b.Property<Guid>("PublicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Questions")
                        .HasColumnType("jsonb");

                    b.Property<bool?>("Randomize")
                        .HasColumnType("boolean");

                    b.Property<string>("Tags")
                        .HasColumnType("jsonb");

                    b.Property<double?>("TimeLimit")
                        .HasColumnType("double precision");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("ModuleId");

                    b.ToTable("Tests");
                });

            modelBuilder.Entity("eep_backend.Models.CourseModuleModels.TestResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Answers")
                        .HasColumnType("jsonb");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<double?>("MaxScore")
                        .HasColumnType("double precision");

                    b.Property<Guid>("PublicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double?>("Score")
                        .HasColumnType("double precision");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<int?>("TestId")
                        .HasColumnType("integer");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TestId");

                    b.HasIndex("UserId");

                    b.ToTable("TestResults");
                });

            modelBuilder.Entity("eep_backend.Models.GameModuleModels.Achievement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Icon")
                        .HasColumnType("text");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int?>("ListId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<double?>("Points")
                        .HasColumnType("double precision");

                    b.Property<Guid>("PublicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ListId");

                    b.HasIndex("UserId");

                    b.ToTable("Achievements");
                });

            modelBuilder.Entity("eep_backend.Models.GameModuleModels.AchievementList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Icon")
                        .HasColumnType("text");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsHidden")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<Guid>("PublicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double?>("SortType")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("AchievementLists");
                });

            modelBuilder.Entity("eep_backend.Models.GameModuleModels.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Avatar")
                        .HasColumnType("text");

                    b.Property<string>("BaseStats")
                        .HasColumnType("jsonb");

                    b.Property<string>("Cosmetics")
                        .HasColumnType("jsonb");

                    b.Property<bool?>("Default")
                        .HasColumnType("boolean");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<Guid>("PublicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Rarity")
                        .HasColumnType("text");

                    b.Property<string>("Skills")
                        .HasColumnType("jsonb");

                    b.Property<string>("UnlockCond")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("eep_backend.Models.GameModuleModels.UserCharacter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<string>("CustomStats")
                        .HasColumnType("jsonb");

                    b.Property<double>("Experience")
                        .HasColumnType("double precision");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("UserId");

                    b.ToTable("UserCharacters");
                });

            modelBuilder.Entity("eep_backend.Models.UserModuleModels.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int?>("NewsId")
                        .HasColumnType("integer");

                    b.Property<Guid>("PublicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("NewsId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("eep_backend.Models.UserModuleModels.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<Guid>("PublicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("eep_backend.Models.UserModuleModels.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<string>("Content")
                        .HasColumnType("jsonb");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Excerpt")
                        .HasColumnType("text");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsPinned")
                        .HasColumnType("boolean");

                    b.Property<Guid>("PublicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Slug")
                        .HasColumnType("text");

                    b.Property<string>("Tags")
                        .HasColumnType("jsonb");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("Slug")
                        .IsUnique();

                    b.ToTable("News");
                });

            modelBuilder.Entity("eep_backend.Models.UserModuleModels.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CourseId")
                        .HasColumnType("integer");

                    b.Property<string>("DayOfWeek")
                        .HasColumnType("text");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("integer");

                    b.Property<string>("Details")
                        .HasColumnType("text");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("integer");

                    b.Property<Guid>("PublicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Subject")
                        .HasColumnType("text");

                    b.Property<string>("Teacher")
                        .HasColumnType("text");

                    b.Property<string>("TimeSlot")
                        .HasColumnType("text");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("ModuleId");

                    b.HasIndex("UserId");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("eep_backend.Models.UserModuleModels.Setting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Icon")
                        .HasColumnType("text");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<Guid>("PublicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("jsonb");

                    b.HasKey("Id");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("eep_backend.Models.UserModuleModels.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ActiveCourseId")
                        .HasColumnType("integer");

                    b.Property<string>("Avatar")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<int?>("FontId")
                        .HasColumnType("integer");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("Login")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<Guid>("PublicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double?>("Rating")
                        .HasColumnType("double precision");

                    b.Property<int?>("RoleId")
                        .HasColumnType("integer");

                    b.Property<string>("SecondName")
                        .HasColumnType("text");

                    b.Property<int?>("SelectedCharacterId")
                        .HasColumnType("integer");

                    b.Property<int?>("ThemeId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ActiveCourseId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("FontId");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.HasIndex("SelectedCharacterId");

                    b.HasIndex("ThemeId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("eep_backend.Models.UserModuleModels.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("eep_backend.Models.CourseModuleModels.Article", b =>
                {
                    b.HasOne("eep_backend.Models.GameModuleModels.Achievement", "HiddenAchievement")
                        .WithMany()
                        .HasForeignKey("HiddenAchievementId");

                    b.HasOne("eep_backend.Models.CourseModuleModels.Module", "Module")
                        .WithMany()
                        .HasForeignKey("ModuleId");

                    b.Navigation("HiddenAchievement");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("eep_backend.Models.CourseModuleModels.Course", b =>
                {
                    b.HasOne("eep_backend.Models.UserModuleModels.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("eep_backend.Models.UserModuleModels.User", null)
                        .WithMany("ChosenCourses")
                        .HasForeignKey("UserId");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("eep_backend.Models.CourseModuleModels.Link", b =>
                {
                    b.HasOne("eep_backend.Models.CourseModuleModels.Course", "Course")
                        .WithMany("UsefulLinks")
                        .HasForeignKey("CourseId");

                    b.HasOne("eep_backend.Models.CourseModuleModels.Link", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.Navigation("Course");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("eep_backend.Models.CourseModuleModels.Module", b =>
                {
                    b.HasOne("eep_backend.Models.CourseModuleModels.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId");

                    b.HasOne("eep_backend.Models.GameModuleModels.Achievement", "HiddenAchievement")
                        .WithMany()
                        .HasForeignKey("HiddenAchievementId");

                    b.Navigation("Course");

                    b.Navigation("HiddenAchievement");
                });

            modelBuilder.Entity("eep_backend.Models.CourseModuleModels.Test", b =>
                {
                    b.HasOne("eep_backend.Models.CourseModuleModels.Course", "Course")
                        .WithMany("Tests")
                        .HasForeignKey("CourseId");

                    b.HasOne("eep_backend.Models.CourseModuleModels.Module", "Module")
                        .WithMany("Tests")
                        .HasForeignKey("ModuleId");

                    b.Navigation("Course");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("eep_backend.Models.CourseModuleModels.TestResult", b =>
                {
                    b.HasOne("eep_backend.Models.CourseModuleModels.Test", "Test")
                        .WithMany()
                        .HasForeignKey("TestId");

                    b.HasOne("eep_backend.Models.UserModuleModels.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Test");

                    b.Navigation("User");
                });

            modelBuilder.Entity("eep_backend.Models.GameModuleModels.Achievement", b =>
                {
                    b.HasOne("eep_backend.Models.GameModuleModels.AchievementList", "List")
                        .WithMany("Achievements")
                        .HasForeignKey("ListId");

                    b.HasOne("eep_backend.Models.UserModuleModels.User", null)
                        .WithMany("Achievements")
                        .HasForeignKey("UserId");

                    b.Navigation("List");
                });

            modelBuilder.Entity("eep_backend.Models.GameModuleModels.UserCharacter", b =>
                {
                    b.HasOne("eep_backend.Models.GameModuleModels.Character", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eep_backend.Models.UserModuleModels.User", "User")
                        .WithMany("UserCharacters")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("User");
                });

            modelBuilder.Entity("eep_backend.Models.UserModuleModels.Comment", b =>
                {
                    b.HasOne("eep_backend.Models.UserModuleModels.News", "News")
                        .WithMany()
                        .HasForeignKey("NewsId");

                    b.HasOne("eep_backend.Models.UserModuleModels.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("News");

                    b.Navigation("User");
                });

            modelBuilder.Entity("eep_backend.Models.UserModuleModels.News", b =>
                {
                    b.HasOne("eep_backend.Models.UserModuleModels.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.Navigation("Author");
                });

            modelBuilder.Entity("eep_backend.Models.UserModuleModels.Schedule", b =>
                {
                    b.HasOne("eep_backend.Models.CourseModuleModels.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId");

                    b.HasOne("eep_backend.Models.UserModuleModels.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("eep_backend.Models.CourseModuleModels.Module", "Module")
                        .WithMany()
                        .HasForeignKey("ModuleId");

                    b.HasOne("eep_backend.Models.UserModuleModels.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Course");

                    b.Navigation("Department");

                    b.Navigation("Module");

                    b.Navigation("User");
                });

            modelBuilder.Entity("eep_backend.Models.UserModuleModels.User", b =>
                {
                    b.HasOne("eep_backend.Models.CourseModuleModels.Course", "ActiveCourse")
                        .WithMany()
                        .HasForeignKey("ActiveCourseId");

                    b.HasOne("eep_backend.Models.UserModuleModels.Department", "Department")
                        .WithMany("Users")
                        .HasForeignKey("DepartmentId");

                    b.HasOne("eep_backend.Models.UserModuleModels.Setting", "Font")
                        .WithMany()
                        .HasForeignKey("FontId");

                    b.HasOne("eep_backend.Models.UserModuleModels.UserRole", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId");

                    b.HasOne("eep_backend.Models.GameModuleModels.Character", "SelectedCharacter")
                        .WithMany()
                        .HasForeignKey("SelectedCharacterId");

                    b.HasOne("eep_backend.Models.UserModuleModels.Setting", "Theme")
                        .WithMany()
                        .HasForeignKey("ThemeId");

                    b.Navigation("ActiveCourse");

                    b.Navigation("Department");

                    b.Navigation("Font");

                    b.Navigation("Role");

                    b.Navigation("SelectedCharacter");

                    b.Navigation("Theme");
                });

            modelBuilder.Entity("eep_backend.Models.CourseModuleModels.Course", b =>
                {
                    b.Navigation("Tests");

                    b.Navigation("UsefulLinks");
                });

            modelBuilder.Entity("eep_backend.Models.CourseModuleModels.Module", b =>
                {
                    b.Navigation("Tests");
                });

            modelBuilder.Entity("eep_backend.Models.GameModuleModels.AchievementList", b =>
                {
                    b.Navigation("Achievements");
                });

            modelBuilder.Entity("eep_backend.Models.UserModuleModels.Department", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("eep_backend.Models.UserModuleModels.User", b =>
                {
                    b.Navigation("Achievements");

                    b.Navigation("ChosenCourses");

                    b.Navigation("UserCharacters");
                });

            modelBuilder.Entity("eep_backend.Models.UserModuleModels.UserRole", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
